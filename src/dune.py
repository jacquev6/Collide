#!/usr/bin/env python3

# Copyright 2018 Vincent Jacques <vincent@vincent-jacques.net>

import sys
import os


def gen(flavor):
    yield '(library'
    yield '  (name Collide)'
    yield '  (modules Ring Drawer Simulation Application GraphicalApplication)'
    yield '  (libraries General JsOfOCairo)'
    if flavor == "coverage":
        yield '  (preprocess (pps bisect_ppx))'
    yield ')'
    yield ''
    yield ''
    yield '(executable'
    yield '  (name collide_cli)'
    yield '  (public_name collide_cli)'
    yield '  (modules collide_cli)'
    yield '  (libraries Collide cairo2)'
    yield ')'
    yield ''
    yield ''
    yield '(executable'
    yield '  (name collide_gtk)'
    yield '  (public_name collide_gtk)'
    yield '  (modules collide_gtk)'
    yield '  (libraries Collide cairo2 threads lablgtk2 cairo2.lablgtk2)'
    yield ')'
    yield ''
    yield ''
    yield '(rule'
    yield '  (targets node_modules.sentinel)'
    yield '  (action (progn'
    yield '    (run %{bin:npm} install "file-saver@1.3.3")'
    yield '    (write-file node_modules.sentinel sentinel)'
    yield '  ))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets FileSaver.js)'
    yield '  (deps node_modules.sentinel)'
    yield '  (action (progn'
    yield '    (with-stdout-to %{targets} (run %{bin:browserify} -s FileSaver node_modules/file-saver/FileSaver.min.js))'
    yield '  ))'
    yield ')'
    yield ''
    yield '(executable'
    yield '  (name collide_browser)'
    yield '  (modules collide_browser)'
    yield '  (libraries Collide)'
    yield '  (preprocess (pps "js_of_ocaml-ppx"))'
    yield '  (js_of_ocaml (flags "+nat.js"))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets bootstrap.min.css)'
    yield '  (action (run %{bin:wget} https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets bootstrap.min.js)'
    yield '  (action (run %{bin:wget} https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets popper.min.js)'
    yield '  (action (run %{bin:wget} https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets jquery-3.2.1.slim.min.js)'
    yield '  (action (run %{bin:wget} https://code.jquery.com/jquery-3.2.1.slim.min.js))'
    yield ')'
    yield ''
    yield '(alias'
    yield '  (name collide_browser)'
    yield '  (deps collide_browser.html bootstrap.min.css bootstrap.min.js popper.min.js jquery-3.2.1.slim.min.js FileSaver.js collide_browser.bc.js)'
    yield ')'
    yield ''
    yield ''
    yield '(executable'
    yield '  (name unit_test)'
    yield '  (modules unit_test)'
    yield '  (libraries Collide)'
    if flavor == "coverage":
        yield '  (preprocess (pps bisect_ppx))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets unit_test.sentinel)'
    yield '  (deps unit_test.bc)'
    yield '  (action (progn'
    yield '    (run %{exe:unit_test.bc})'
    yield '    (write-file unit_test.sentinel sentinel)'
    yield '  ))'
    yield ')'
    yield ''
    yield '(alias'
    yield '  (name runtest)'
    yield '  (deps unit_test.sentinel)'
    yield ')'
    yield ''

for line in gen(sys.argv[1]):
    print(line)
