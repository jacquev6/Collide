#!/usr/bin/env python3

import sys
import os

template = """\
; THIS FILE IS GENERATED by ./jbuild.py
; MANUAL CHANGES WILL BE LOST

(jbuild_version 1)

(library (
  (name Collide)
  (modules (Drawer Simulation GraphicalApplication))
  (libraries (General JsOfOCairo)){coverage}
))


(executable (
  (name collide_cli)
  (modules (collide_cli))
  (libraries (Collide cairo2))
))


(executable (
  (name collide_gtk)
  (modules (collide_gtk))
  (libraries (Collide cairo2 threads lablgtk2 cairo2.lablgtk2))
))


(rule (
  (targets (node_modules.sentinel))
  (action (progn
    {npm_install}
    (write-file node_modules.sentinel sentinel)
  ))
))

(rule (
  (targets (FileSaver.js))
  (deps (node_modules.sentinel))
  (action (progn
    (with-stdout-to ${{@}} (run ${{bin:browserify}} -s FileSaver node_modules/file-saver/FileSaver.min.js))
  ))
))

(executable (
  (name collide_browser)
  (modules (collide_browser))
  (libraries (Collide))
  (preprocess (pps (js_of_ocaml-ppx)))
  (js_of_ocaml ((flags (+nat.js))))
))

(rule (
  (targets (bootstrap.min.css))
  (action (run ${{bin:wget}} https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css))
))

(rule (
  (targets (bootstrap.min.js))
  (action (run ${{bin:wget}} https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js))
))

(rule (
  (targets (popper.min.js))
  (action (run ${{bin:wget}} https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js))
))

(rule (
  (targets (jquery-3.2.1.slim.min.js))
  (action (run ${{bin:wget}} https://code.jquery.com/jquery-3.2.1.slim.min.js))
))

(alias (
  (name collide_browser)
  (deps (collide_browser.html bootstrap.min.css bootstrap.min.js popper.min.js jquery-3.2.1.slim.min.js FileSaver.js collide_browser.bc.js))
))


(executable (
  (name unit_test)
  (modules (unit_test))
  (libraries (Collide)){coverage}
))

(rule (
  (targets (unit_test.sentinel))
  (deps (unit_test.bc))
  (action (progn
    (run ${{exe:unit_test.bc}})
    (write-file unit_test.sentinel sentinel)
  ))
))

(alias (
  (name runtest)
  (deps (unit_test.sentinel))
))
"""

npm_packages = [
    "file-saver@1.3.3",
]

coverage = dict(
    coverage="\n  (preprocess (pps (bisect_ppx)))",
    npm_install="(system \"if [ -d {cache} ]; then echo Restoring cached npm_modules; rm -rf node_modules; cp -R {cache} node_modules; else npm install {}; rm -rf {cache}; cp -R node_modules {cache}; fi\")".format(" ".join("'{}'".format(pack) for pack in npm_packages), cache="{}/_builds/node_modules".format(os.getcwd())),
)

release = dict(
    coverage="",
    npm_install=coverage["npm_install"],
)

publish = dict(
    coverage="",
    npm_install="(run ${{bin:npm}} install {})".format(" ".join('"{}"'.format(pack) for pack in npm_packages)),
)

flavors = dict(
  coverage=coverage,
  release=release,
  publish=publish,
)

with open(__file__[:-3], "w") as f:
    f.write(template.format(**flavors[sys.argv[1]]))
